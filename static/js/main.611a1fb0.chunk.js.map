{"version":3,"sources":["ReportContext.js","MenuList.js","Title.js","Dashboard.js","Legend.js","ReportLayer.js","MapView.js","ReportView.js","ReportLoader.js","App.js","theme.js","index.js"],"names":["dataSourceSettings","url","columnNameMappings","Country_Region","Province_State","Confirmed","Deaths","Recovered","Active","columnTypeMappings","countryMapping","US","Czechia","preserveNames","ReportContext","React","createContext","MenuList","List","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","Title","props","Typography","variant","color","gutterBottom","children","Copyright","align","href","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","classes","useState","open","setOpen","reportCtx","useContext","reportDate","dataSource","properties","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","onClick","noWrap","toLocaleDateString","undefined","weekday","year","month","day","Drawer","Divider","Container","maxWidth","Grid","item","xs","lg","Paper","Box","pt","LegendControl","options","getBarStyle","opt","background","map","i","key","style","length","minValue","Legend","useLeaflet","useEffect","control","L","onAdd","ReactDOM","render","addTo","ReportLayer","reportDataSource","countriesDataSource","legendOptions","getReportColor","statistics","result","GeoJSON","onEachFeature","feature","layer","countryName","rows","find","getCountryStats","name","setStyle","fillColor","popupContent","bindPopup","on","mouseover","e","getPopup","setLatLng","latlng","openOn","mouseout","closePopup","mousemove","weight","opacity","fillOpacity","data","MapView","center","zoom","doubleClickZoom","TileLayer","attribution","countries","memo","prevProps","nextProps","descendingComparator","a","b","orderBy","headCells","id","numeric","label","SortableTableHead","order","onRequestSort","TableHead","TableRow","headCell","TableCell","sortDirection","TableSortLabel","active","direction","property","event","visuallyHidden","marginBottom","table","minWidth","border","clip","margin","top","ReportView","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","TableContainer","Table","aria-labelledby","size","rowCount","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","hover","tabIndex","scope","CountryRegion","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","value","getLatestReport","daysOffset","Date","setDate","getDate","getDailyReport","getFormattedDate","replace","console","log","fetch","buildOptions","resp","ok","text","dataTable","parseCSV","groupBy","transform","ReportDate","sum","items","prop","reduce","current","Array","from","v","date","delimiter","getFullYear","getMonth","toString","padStart","join","settings","lines","split","columns","Object","keys","includes","type","filter","c","getColumns","shift","line","values","match","column","cells","countryVal","colName","normalizeRow","buildRow","r","list","keyGetter","Map","forEach","collection","get","push","set","headers","ProgressBar","CircularProgress","App","setReportDataSource","getReport","basename","process","Provider","exact","path","createMuiTheme","palette","main","secondary","error","red","A400","default","ThemeProvider","document","querySelector"],"mappings":"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","file":"static/js/main.611a1fb0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst dataSourceSettings_before0321 = {\r\n  url:\r\n    \"https://vg-cors-anywhere.azurewebsites.net/https://raw.github.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/{reportDate}.csv\",\r\n  columnNameMappings: {\r\n    \"Country/Region\": \"CountryRegion\",\r\n    \"Province/State\": \"ProvinceState\",\r\n    Confirmed: \"Confirmed\",\r\n    Deaths: \"Deaths\",\r\n    Recovered: \"Recovered\",\r\n  },\r\n  columnTypeMappings: {\r\n    Deaths: \"number\",\r\n    Recovered: \"number\",\r\n    Confirmed: \"number\",\r\n  },\r\n  countryMapping: {\r\n    US: \"United States of America\",\r\n    '\"Korea, South\"': \"South Korea\",\r\n    Czechia: \"Czech Republic\",\r\n  },\r\n  preserveNames: true,\r\n};\r\n\r\nexport const dataSourceSettings = {\r\n  url:\r\n    \"https://vg-cors-anywhere.azurewebsites.net/raw.github.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/{reportDate}.csv\",\r\n  columnNameMappings: {\r\n    Country_Region: \"CountryRegion\",\r\n    Province_State: \"ProvinceState\",\r\n    Confirmed: \"Confirmed\",\r\n    Deaths: \"Deaths\",\r\n    Recovered: \"Recovered\",\r\n    Active: \"Active\",\r\n  },\r\n  columnTypeMappings: {\r\n    Deaths: \"number\",\r\n    Recovered: \"number\",\r\n    Confirmed: \"number\",\r\n  },\r\n  countryMapping: {\r\n    US: \"United States of America\",\r\n    '\"Korea, South\"': \"South Korea\",\r\n    Czechia: \"Czech Republic\",\r\n  },\r\n  preserveNames: true,\r\n};\r\n\r\nexport const ReportContext = React.createContext(null);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport ReportIcon from \"@material-ui/icons/List\";\r\n\r\nexport default function MenuList() {\r\n  return (\r\n    <div>\r\n      <List>\r\n        <ListItem button component={Link} to=\"/\">\r\n          <ListItemIcon>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Map\" />\r\n        </ListItem>\r\n        <ListItem button component={Link} to=\"/list\">\r\n          <ListItemIcon>\r\n            <ReportIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Report\" />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React, { useContext } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n//import Badge from \"@material-ui/core/Badge\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\n//import NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport { ReportContext } from \"./ReportContext\";\r\nimport MenuList from \"./MenuList\";\r\nimport Title from \"./Title\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Source: \"}\r\n      <Link color=\"inherit\" href=\"https://github.com/CSSEGISandData/COVID-19\">\r\n        Novel Coronavirus (COVID-19) Cases, provided by JHU CSSE\r\n      </Link>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    \r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard(props) {\r\n  const { children } = props;\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  //const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  const reportCtx = useContext(ReportContext);\r\n  let reportDate = reportCtx.dataSource\r\n    ? reportCtx.dataSource.properties[\"ReportDate\"]\r\n    : null;\r\n  const options = {\r\n    weekday: \"long\",\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"absolute\"\r\n        className={clsx(classes.appBar, open && classes.appBarShift)}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              open && classes.menuButtonHidden\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.title}\r\n          >\r\n            Recent Statistics (last updated:{\" \"}\r\n            {reportDate && reportDate.toLocaleDateString(undefined, options)})\r\n          </Typography>\r\n          {/*<IconButton color=\"inherit\">\r\n            <Badge badgeContent={0} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n  </IconButton>*/}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <MenuList />\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"xl\" className={classes.container}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} lg={12}>\r\n              <Paper>{children}</Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Title>About this data</Title>\r\n            <Typography variant=\"body1\" gutterBottom>\r\n              Coronavirus COVID-19 Global Cases by the Center for Systems\r\n              Science and Engineering (CSSE) at Johns Hopkins University (JHU)\r\n            </Typography>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import * as L from \"leaflet\";\r\nimport React, { useEffect} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useLeaflet } from \"react-leaflet\";\r\n\r\nfunction LegendControl(props) {\r\n  const { options } = props;\r\n  function getBarStyle(opt) {\r\n    return {\r\n      background: opt.background\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div className=\"info legend\">\r\n      <h4>Confirmed cases</h4>\r\n      {options.map((opt, i) => {\r\n        return (\r\n          <div key={i}>\r\n            <i style={getBarStyle(opt)}></i>\r\n            {i === options.length - 1 ? (\r\n              <span>{opt.minValue}+ </span>\r\n            ) : (\r\n              <span>\r\n                {opt.minValue} &ndash; {options[i + 1].minValue}\r\n              </span>\r\n            )}\r\n            <br />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Legend(props) {\r\n  const { map } = useLeaflet();\r\n  useEffect(() => {\r\n    let control = L.control({ position: \"topright\" });\r\n    control.onAdd = function(map) {\r\n      const container = L.DomUtil.create(\"div\");\r\n      ReactDOM.render(<LegendControl {...props} />, container);\r\n      return container;\r\n    };\r\n    control.addTo(map);\r\n  }, [map, props]);\r\n\r\n  return null;\r\n}\r\n\r\nexport default Legend;\r\n","import React, { Fragment } from \"react\";\r\nimport { GeoJSON, useLeaflet } from \"react-leaflet\";\r\nimport Legend from \"./Legend\";\r\n\r\nexport default function ReportLayer(props) {\r\n  const { reportDataSource, countriesDataSource } = props;\r\n  const { map } = useLeaflet();\r\n\r\n  const legendOptions = [\r\n    {\r\n      minValue: 0,\r\n      background: \"#d2e3fc\",\r\n    },\r\n    {\r\n      minValue: 50,\r\n      background: \"#8ab4f8\",\r\n    },\r\n    {\r\n      minValue: 100,\r\n      background: \"#4285f4\",\r\n    },\r\n    {\r\n      minValue: 1000,\r\n      background: \"#1967d2\",\r\n    },\r\n    {\r\n      minValue: 10000,\r\n      background: \"#174ea6\",\r\n    },\r\n  ];\r\n\r\n  function getReportColor(statistics) {\r\n    let result = \"#D3D3D3\"; //default\r\n    for (let i = 0; i < legendOptions.length; i++) {\r\n      if (statistics.Confirmed >= legendOptions[i].minValue) {\r\n        result = legendOptions[i].background;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function getCountryStyle(feature) {\r\n    return {\r\n      color: \"#1f2021\",\r\n      weight: 0.1,\r\n      opacity: 1,\r\n      fillOpacity: 0.7,\r\n      fillColor: \"#D3D3D3\",\r\n    };\r\n  }\r\n\r\n  function getCountryStats(countryName) {\r\n    return reportDataSource.rows.find((item) => {\r\n      return item[\"CountryRegion\"] === countryName;\r\n    });\r\n  }\r\n\r\n  function processFeature(feature, layer) {\r\n    const { name: countryName } = feature.properties;\r\n    const result = getCountryStats(countryName);\r\n    if (result) {\r\n      layer.setStyle({ fillColor: getReportColor(result) });\r\n\r\n      const popupContent = `<div><h3>${feature.properties.name}</h3>\r\n          <div>Confirmed: ${result.Confirmed}</div>\r\n          <div>Deaths: ${result.Deaths}</div>\r\n          <div>Recovered: ${result.Recovered}</div>    \r\n      </div>`;\r\n      layer.bindPopup(popupContent);\r\n\r\n      layer.on({\r\n        mouseover: (e) => {\r\n          layer.getPopup().setLatLng(e.latlng).openOn(map);\r\n        },\r\n        mouseout: (e) => layer.closePopup(),\r\n        mousemove: (e) => {\r\n          //layer.closePopup();\r\n          layer.getPopup().setLatLng(e.latlng).openOn(map);\r\n        },\r\n      });\r\n    } else {\r\n      //console.log(countryName);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <GeoJSON\r\n        onEachFeature={processFeature}\r\n        style={getCountryStyle}\r\n        data={countriesDataSource}\r\n      />\r\n      <Legend options={legendOptions} />\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Map, TileLayer } from \"react-leaflet\";\r\nimport ReportLayer from \"./ReportLayer\";\r\nimport { ReportContext } from \"./ReportContext\";\r\nimport \"./MapView.css\";\r\nimport countries from \"./datasources/countries.geo.json\";\r\n\r\nfunction MapView() {\r\n  const reportCtx = useContext(ReportContext);\r\n\r\n  return (\r\n    <Map center={[40, 0]} zoom={3} doubleClickZoom={false}>\r\n      <TileLayer\r\n        noWrap={true}\r\n        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\"\r\n      />\r\n      <ReportLayer countriesDataSource={countries} reportDataSource={reportCtx.dataSource} />\r\n    </Map>\r\n  );\r\n}\r\n\r\nconst areEqual = (prevProps, nextProps) => {\r\n  return true;\r\n};\r\n\r\nexport default React.memo((props) => {\r\n  return <MapView {...props} />;\r\n}, areEqual);\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { ReportContext } from \"./ReportContext\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"CountryRegion\",\r\n    numeric: false,\r\n    label: \"Country/Region\",\r\n  },\r\n  { id: \"Confirmed\", numeric: true, label: \"Confirmed\" },\r\n  { id: \"Deaths\", numeric: true, label: \"Deaths\" },\r\n  { id: \"Recovered\", numeric: true, label: \"Recovered\" },\r\n];\r\n\r\nfunction SortableTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nSortableTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function ReportView() {\r\n  const reportCtx = useContext(ReportContext);\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"desc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"Confirmed\");\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\r\n  const rows = reportCtx.dataSource.rows;\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={\"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <SortableTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow key={index} hover tabIndex={-1}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.CountryRegion}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.Confirmed}</TableCell>\r\n                      <TableCell align=\"right\">{row.Deaths}</TableCell>\r\n                      <TableCell align=\"right\">{row.Recovered}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[25, 50, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import { dataSourceSettings } from \"./ReportContext\";\r\n\r\nexport async function getLatestReport(daysOffset = 0) {\r\n  dataSourceSettings.reportDate = new Date();\r\n  dataSourceSettings.reportDate.setDate(\r\n    dataSourceSettings.reportDate.getDate() - daysOffset\r\n  );\r\n  let dataSource = await getDailyReport(dataSourceSettings);\r\n  if (!dataSource && daysOffset < 3) {\r\n    daysOffset++;\r\n    return await getLatestReport(daysOffset);\r\n  }\r\n  return dataSource;\r\n}\r\n\r\nexport async function getDailyReport(dataSourceSettings) {\r\n  const key = getFormattedDate(dataSourceSettings.reportDate, \"-\");\r\n  const url = dataSourceSettings.url.replace(\"{reportDate}\", key);\r\n  console.log(url)\r\n  const resp = await fetch(url, buildOptions());\r\n  if (resp.ok) {\r\n    const content = await resp.text();\r\n    const dataTable = parseCSV(dataSourceSettings, content);\r\n    dataTable.rows = groupBy(dataTable.rows, (item) => item.CountryRegion);\r\n    dataTable.rows = transform(dataTable.rows);\r\n    dataTable.properties = {\r\n      ReportDate: dataSourceSettings.reportDate,\r\n    };\r\n    return dataTable;\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction sum(items, prop) {\r\n  return items.reduce(function (result, current) {\r\n    return result + current[prop];\r\n  }, 0);\r\n}\r\n\r\nfunction transform(data) {\r\n  const result = Array.from(data).map(([k, v]) => {\r\n    return {\r\n      CountryRegion: v[0].CountryRegion,\r\n      Confirmed: sum(v, \"Confirmed\"),\r\n      Recovered: sum(v, \"Recovered\"),\r\n      Deaths: sum(v, \"Deaths\"),\r\n    };\r\n  });\r\n  return result;\r\n}\r\n\r\nfunction getFormattedDate(date, delimiter) {\r\n  let year = date.getFullYear();\r\n  let month = (1 + date.getMonth()).toString().padStart(2, \"0\");\r\n  let day = date.getDate().toString().padStart(2, \"0\");\r\n\r\n  return [month, day, year].join(delimiter);\r\n}\r\n\r\nfunction parseCSV(settings, value) {\r\n  let lines = value.split(\"\\n\");\r\n  const columns = getColumns(settings, lines[0]);\r\n  lines.shift();\r\n  const rows = lines\r\n    .map((line) => {\r\n      return buildRow(settings, columns, line);\r\n    })\r\n    .filter((r) => r);\r\n  return {\r\n    columns: columns,\r\n    rows: rows.filter((r) => r.CountryRegion),\r\n  };\r\n}\r\n\r\nfunction getColumns(settings, value) {\r\n  return value\r\n    .split(\",\")\r\n    .map((name, i) => {\r\n      if (Object.keys(settings.columnNameMappings).includes(name)) {\r\n        return {\r\n          name: settings.columnNameMappings[name],\r\n          index: i,\r\n          type: \"string\",\r\n        };\r\n      }\r\n      return null;\r\n    })\r\n    .filter((c) => c);\r\n}\r\n\r\nfunction buildRow(settings, columns, value) {\r\n  if (value.length < 1) {\r\n    return null;\r\n  }\r\n\r\n  value = value\r\n    .split(\",\")\r\n    .map((v) => {\r\n      if (v.length === 0) v = \"Undef\";\r\n      return v;\r\n    })\r\n    .join(\",\");\r\n  let values = value.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\r\n  let row = {};\r\n  for (let column of columns) {\r\n    row[column.name] = values[column.index];\r\n  }\r\n  return normalizeRow(settings, row);\r\n}\r\n\r\nfunction normalizeRow(settings, cells) {\r\n  let countryVal = cells.CountryRegion;\r\n  if (Object.keys(settings.countryMapping).includes(countryVal)) {\r\n    cells.CountryRegion = settings.countryMapping[countryVal];\r\n  }\r\n  for (let colName in settings.columnTypeMappings) {\r\n    if (settings.columnTypeMappings[colName] === \"number\")\r\n      cells[colName] = parseInt(cells[colName]);\r\n  }\r\n  return cells;\r\n}\r\n\r\nfunction groupBy(list, keyGetter) {\r\n  const map = new Map();\r\n  list.forEach((item) => {\r\n    const key = keyGetter(item);\r\n    const collection = map.get(key);\r\n    if (!collection) {\r\n      map.set(key, [item]);\r\n    } else {\r\n      collection.push(item);\r\n    }\r\n  });\r\n  return map;\r\n}\r\n\r\nfunction buildOptions(options) {\r\n  options = options || {};\r\n  options.headers = options.headers || {};\r\n  options.headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\r\n  return options;\r\n}\r\n","import React, { useEffect, useState, Fragment } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ReportContext} from \"./ReportContext\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Dashboard from \"./Dashboard\";\nimport MapView from \"./MapView\";\nimport ReportView from \"./ReportView\";\nimport { getLatestReport } from \"./ReportLoader\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nfunction ProgressBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n}\n\nexport default function App() {\n  const [reportDataSource, setReportDataSource] = useState(null);\n  useEffect(() => {\n    async function getReport() {\n      let dataSource = await getLatestReport(1);\n      setReportDataSource(dataSource);\n    }\n    getReport();\n  }, []);\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <ReportContext.Provider\n        value={{\n          dataSource: reportDataSource,\n        }}\n      >\n        <Dashboard>\n          {reportDataSource ? (\n            <Fragment>\n              <Route exact path=\"/\" component={MapView} />\n              <Route exact path=\"/list\" component={ReportView} />\n            </Fragment>\n          ) : (\n            <ProgressBar />\n          )}\n        </Dashboard>\n      </ReportContext.Provider>\n    </BrowserRouter>\n  );\n}\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}